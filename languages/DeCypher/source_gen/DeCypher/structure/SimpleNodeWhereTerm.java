package DeCypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleNodeWhereTerm extends NodeReferringWhereTerm {
  public static final String concept = "DeCypher.structure.SimpleNodeWhereTerm";
  public static final String VALUE = "value";

  public SimpleNodeWhereTerm(SNode node) {
    super(node);
  }

  public String getValue() {
    return this.getProperty(SimpleNodeWhereTerm.VALUE);
  }

  public void setValue(String value) {
    this.setProperty(SimpleNodeWhereTerm.VALUE, value);
  }

  public static SimpleNodeWhereTerm newInstance(SModel sm, boolean init) {
    return (SimpleNodeWhereTerm) SModelUtil_new.instantiateConceptDeclaration("DeCypher.structure.SimpleNodeWhereTerm", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleNodeWhereTerm newInstance(SModel sm) {
    return SimpleNodeWhereTerm.newInstance(sm, false);
  }
}
