package DeCypher.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StartClause extends BaseConcept {
  public static final String concept = "DeCypher.structure.StartClause";
  public static final String TERMS = "terms";

  public StartClause(SNode node) {
    super(node);
  }

  public int getTermsesCount() {
    return this.getChildCount(StartClause.TERMS);
  }

  public Iterator<StartTerm> termses() {
    return this.children(StartTerm.class, StartClause.TERMS);
  }

  public List<StartTerm> getTermses() {
    return this.getChildren(StartTerm.class, StartClause.TERMS);
  }

  public void addTerms(StartTerm node) {
    this.addChild(StartClause.TERMS, node);
  }

  public void insertTerms(StartTerm prev, StartTerm node) {
    this.insertChild(prev, StartClause.TERMS, node);
  }

  public static StartClause newInstance(SModel sm, boolean init) {
    return (StartClause) SModelUtil_new.instantiateConceptDeclaration("DeCypher.structure.StartClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StartClause newInstance(SModel sm) {
    return StartClause.newInstance(sm, false);
  }
}
