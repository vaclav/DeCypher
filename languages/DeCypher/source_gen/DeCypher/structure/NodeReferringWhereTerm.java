package DeCypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NodeReferringWhereTerm extends WhereTerm {
  public static final String concept = "DeCypher.structure.NodeReferringWhereTerm";
  public static final String NODE_REF = "nodeRef";

  public NodeReferringWhereTerm(SNode node) {
    super(node);
  }

  public GraphNodeReference getNodeRef() {
    return (GraphNodeReference) this.getChild(GraphNodeReference.class, NodeReferringWhereTerm.NODE_REF);
  }

  public void setNodeRef(GraphNodeReference node) {
    super.setChild(NodeReferringWhereTerm.NODE_REF, node);
  }

  public static NodeReferringWhereTerm newInstance(SModel sm, boolean init) {
    return (NodeReferringWhereTerm) SModelUtil_new.instantiateConceptDeclaration("DeCypher.structure.NodeReferringWhereTerm", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NodeReferringWhereTerm newInstance(SModel sm) {
    return NodeReferringWhereTerm.newInstance(sm, false);
  }
}
