package DeCypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LogicalWhereExpression extends NodeExpressionWhereTerm {
  public static final String concept = "DeCypher.structure.LogicalWhereExpression";
  public static final String LEFT = "left";
  public static final String RIGHT = "right";

  public LogicalWhereExpression(SNode node) {
    super(node);
  }

  public NodeExpressionWhereTerm getLeft() {
    return (NodeExpressionWhereTerm) this.getChild(NodeExpressionWhereTerm.class, LogicalWhereExpression.LEFT);
  }

  public void setLeft(NodeExpressionWhereTerm node) {
    super.setChild(LogicalWhereExpression.LEFT, node);
  }

  public NodeExpressionWhereTerm getRight() {
    return (NodeExpressionWhereTerm) this.getChild(NodeExpressionWhereTerm.class, LogicalWhereExpression.RIGHT);
  }

  public void setRight(NodeExpressionWhereTerm node) {
    super.setChild(LogicalWhereExpression.RIGHT, node);
  }

  public static LogicalWhereExpression newInstance(SModel sm, boolean init) {
    return (LogicalWhereExpression) SModelUtil_new.instantiateConceptDeclaration("DeCypher.structure.LogicalWhereExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LogicalWhereExpression newInstance(SModel sm) {
    return LogicalWhereExpression.newInstance(sm, false);
  }
}
