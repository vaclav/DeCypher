package DeCypher.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReturnClause extends BaseConcept {
  public static final String concept = "DeCypher.structure.ReturnClause";
  public static final String TERMS = "terms";

  public ReturnClause(SNode node) {
    super(node);
  }

  public int getTermsesCount() {
    return this.getChildCount(ReturnClause.TERMS);
  }

  public Iterator<ReturnTerm> termses() {
    return this.children(ReturnTerm.class, ReturnClause.TERMS);
  }

  public List<ReturnTerm> getTermses() {
    return this.getChildren(ReturnTerm.class, ReturnClause.TERMS);
  }

  public void addTerms(ReturnTerm node) {
    this.addChild(ReturnClause.TERMS, node);
  }

  public void insertTerms(ReturnTerm prev, ReturnTerm node) {
    this.insertChild(prev, ReturnClause.TERMS, node);
  }

  public static ReturnClause newInstance(SModel sm, boolean init) {
    return (ReturnClause) SModelUtil_new.instantiateConceptDeclaration("DeCypher.structure.ReturnClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReturnClause newInstance(SModel sm) {
    return ReturnClause.newInstance(sm, false);
  }
}
