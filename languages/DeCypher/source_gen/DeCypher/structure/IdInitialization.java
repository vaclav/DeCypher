package DeCypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.IntegerConstant;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IdInitialization extends Initialization {
  public static final String concept = "DeCypher.structure.IdInitialization";
  public static final String IDS = "ids";

  public IdInitialization(SNode node) {
    super(node);
  }

  public int getIdsesCount() {
    return this.getChildCount(IdInitialization.IDS);
  }

  public Iterator<IntegerConstant> idses() {
    return this.children(IntegerConstant.class, IdInitialization.IDS);
  }

  public List<IntegerConstant> getIdses() {
    return this.getChildren(IntegerConstant.class, IdInitialization.IDS);
  }

  public void addIds(IntegerConstant node) {
    this.addChild(IdInitialization.IDS, node);
  }

  public void insertIds(IntegerConstant prev, IntegerConstant node) {
    this.insertChild(prev, IdInitialization.IDS, node);
  }

  public static IdInitialization newInstance(SModel sm, boolean init) {
    return (IdInitialization) SModelUtil_new.instantiateConceptDeclaration("DeCypher.structure.IdInitialization", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IdInitialization newInstance(SModel sm) {
    return IdInitialization.newInstance(sm, false);
  }
}
